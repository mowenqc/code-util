<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${dataInfo.daoPackage}.${table.domainClassName}Mapper">
    <resultMap id="${table.domainObjName}Map" type="${dataInfo.domainPackage}.${table.domainClassName}">
        #foreach($column in $table.columnList)
            #if($column.priKey == 3)
                <id column="${column.columnName}" property="${column.fieldName}"/>
            #else
                <result column="${column.columnName}" property="${column.fieldName}"/>
            #end
        #end
    </resultMap>
    <sql id="allColumn">
        #foreach($column in $table.columnList) `$column.columnName`#if($foreach.count < $table.columnList.size()),#end#end

    </sql>

    <sql id="tableName">
        ${table.tableName}
    </sql>

    <sql id="where">
        <if test="null!=e">
            #foreach($item in $table.columnList)
                #if($item.fieldName != 'addTime' && $item.fieldName != 'createTime' && $item.fieldName != 'updateTime' && $item.fieldName != 'id')
                    <if test="e.$item.fieldName != null and e.$item.fieldName != ''">
                        AND `$item.columnName` = #{e.$item.fieldName}
                    </if>
                #end
            #end
        </if>
    </sql>

    <insert id="insert" parameterType="${dataInfo.domainPackage}.${table.domainClassName}" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO <include refid="tableName"></include> (
        <include refid="allColumn"></include>
        )
        VALUES(#foreach($item in $table.columnList)
        #if($item.fieldName != 'addTime' && $item.fieldName != 'createTime' && $item.fieldName != 'updateTime')
            #{$item.fieldName}
        #else
            now()
        #end
        #if($foreach.count < $table.columnList.size()),
        #end#end)
    </insert>

    <delete id="deleteById" parameterType="int">
        DELETE FROM <include refid="tableName"></include>
        <where>
            #foreach($column in $table.columnList)
                #if($column.priKey == 3)
                    and ${column.columnName} = #{${column.fieldName}}
                #end
            #end
        </where>
    </delete>

    <update id="update" parameterType="${dataInfo.domainPackage}.${table.domainClassName}">
        UPDATE ${table.tableName} SET update_time = now()
        #foreach($item in $table.columnList)
            #if($item.fieldName != 'addTime' && $item.fieldName != 'createTime' && $item.fieldName != 'updateTime' && $item.fieldName != 'id')
                <if test="$item.fieldName != null and $item.fieldName !=''">
                    ,`$item.columnName` = #{$item.fieldName}
                </if>
            #end
        #end
        <where>
            #foreach($column in $table.columnList)
                #if($column.priKey == 3)
                    and ${column.columnName} = #{${column.fieldName}}
                #end
            #end
        </where>
    </update>

    <select id="findById" parameterType="int"
            resultMap="${table.domainObjName}Map">
        SELECT <include refid="allColumn"></include>
        FROM <include refid="tableName"></include>
        <where>
            #foreach($column in $table.columnList)
                #if($column.priKey == 3)
                    and ${column.columnName} = #{${column.fieldName}}
                #end
            #end
        </where>
    </select>

    <select id="list" resultMap="${table.domainObjName}Map">
        SELECT
        #foreach($column in $table.columnList)a.`$column.columnName`#if($foreach.count < $table.columnList.size()),#end#end
        FROM ${table.tableName} a
        <where>
            <if test="null!=e">
                #foreach($item in $table.columnList)
                    #if($item.fieldName != 'addTime' && $item.fieldName != 'createTime' && $item.fieldName != 'updateTime' && $item.fieldName != 'id')
                        <if test="e.$item.fieldName != null and e.$item.fieldName != ''">
                            AND a.$item.columnName = #{e.$item.fieldName}
                        </if>
                    #end
                #end
            </if>
        </where>
        order by a.create_time desc
        <if test="p != null and p.pageSize > 0">
            limit #{p.offset}, #{p.pageSize}
        </if>
    </select>
    <select id="count" resultType="int" >
        SELECT COUNT(*)
        FROM <include refid="tableName"></include>
        <where>
            <include refid="where"></include>
        </where>
    </select>
</mapper>

