package $dataInfo.controllerPackage;

import ${dataInfo.interfacePackage}.I${table.domainClassName}Service;
import ${dataInfo.domainPackage}.${table.domainClassName};
import com.sales.common.base.BaseController;
import com.sales.common.domain.Page;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import javax.annotation.Resource;
import java.util.List;
import com.sales.common.domain.CommonResponse;
import com.sales.common.code.CommonCode;
import org.springframework.web.bind.annotation.*;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
/**
* @description: $!table.comment
* @author: $!config.user
* @createTime: $!config.time
*/
@Controller
@RequestMapping(value = "${table.domainObjName}")
@Api(tags = "${table.comment}")
public class ${table.domainClassName}Controller extends BaseController{
    private Logger logger = LogManager.getLogger(getClass());

    @Resource
    private I${table.domainClassName}Service ${table.domainObjName}Service;

    @GetMapping("index")
    public String index(ModelMap modelMap){
        return "${table.domainObjName}/index";
    }
    /**
     * 新增
     * @param ${table.domainObjName}
     * @return
     */
    @PostMapping("insert")
    @ApiOperation(value = "新增",notes = "添加新的记录",response = CommonResponse.class)
    @ResponseBody
    public CommonResponse insert ( @ApiParam(name = "${table.domainObjName}",value = "${table.domainClassName}实体类",required = true)${table.domainClassName} ${table.domainObjName}){
        try {
            ${table.domainObjName}Service.insert(${table.domainObjName});
            return buildSuccessResult();
        } catch (Exception e) {
            logger.error(e.getMessage(), e);
            return buildErrorResult(CommonCode.SERVER_ERROR.getCode(), CommonCode.SERVER_ERROR.getValue());
        }
    }
    /**
     * 根据ID删除
     * @return
     */
    @GetMapping("deleteById")
    @ApiOperation(value = "根据ID删除",notes = "根据id删除一条数据",response = CommonResponse.class)
    @ResponseBody
    public CommonResponse deleteById(Integer id){
        try {
            ${table.domainObjName}Service.deleteById(id);
            return buildSuccessResult();
        } catch (Exception e) {
            logger.error(e.getMessage(), e);
            return buildErrorResult(CommonCode.SERVER_ERROR.getCode(), CommonCode.SERVER_ERROR.getValue());
        }
    }

    /***
     * 修改
     * @param ${table.domainObjName}
     * @return
     */
    @PostMapping("update")
    @ApiOperation(value = "修改",notes = "根据id修改其他数据",response = CommonResponse.class)
    @ResponseBody
    public CommonResponse update(@ApiParam(name = "${table.domainObjName}",value = "${table.domainClassName}实体类",required = true)${table.domainClassName} ${table.domainObjName}){
        try {
            ${table.domainObjName}Service.update(${table.domainObjName});
            return buildSuccessResult();
        } catch (Exception e) {
            logger.error(e.getMessage(), e);
            return buildErrorResult(CommonCode.SERVER_ERROR.getCode(), CommonCode.SERVER_ERROR.getValue());
        }
    }

    /**
     * 根据ID查找
     * @return
     */
    @GetMapping("findById")
    @ApiOperation(value = "根据ID查询",notes = "根据ID查询一条数据",response = CommonResponse.class)
    @ResponseBody
    public CommonResponse findById(Integer id){
        try {
            ${table.domainClassName} result${table.domainObjName} = ${table.domainObjName}Service.findById(id);
            return buildSuccessResult(result${table.domainObjName});
        } catch (Exception e) {
            logger.error(e.getMessage(), e);
            return buildErrorResult(CommonCode.SERVER_ERROR.getCode(), CommonCode.SERVER_ERROR.getValue());
        }
    }

    /**
     * 分页获取属性列表
     * @return
     */
    @GetMapping("list")
    @ApiOperation(value = "分页获取",notes = "分页获取",response = CommonResponse.class)
    @ResponseBody
    public CommonResponse list${table.domainClassName}(@ApiParam(name = "${table.domainObjName}",value = "${table.domainClassName}实体类",required = true)${table.domainClassName} ${table.domainObjName},
                                                 @ApiParam(name = "page",value = "分页实体类",required = true)Page page){
        try {
            List<${table.domainClassName}> list = ${table.domainObjName}Service.list(${table.domainObjName}, page);
            int count = ${table.domainObjName}Service.count(${table.domainObjName});
            return buildSuccessPageResult(list,count);
        } catch (Exception e) {
            logger.error(e.getMessage(), e);
            return buildErrorResult(CommonCode.SERVER_ERROR.getCode(), CommonCode.SERVER_ERROR.getValue());
        }
    }
}
